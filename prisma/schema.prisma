// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin {
  id                  Int                   @id @default(autoincrement())
  admin_id            String                @unique
  first_name          String
  last_name           String
  full_name           String
  email               String                @unique
  address             String                @db.VarChar(250)
  gender              String
  contact_number      Int                   @unique @db.Integer
  state               String
  city                String
  password            String                @db.VarChar(20)
  admin_qualification String                @db.VarChar(250)
  student_remarks     student_remarks[]
  staff_remarks       staff_remarks[]
  exam_schedule       exam_schedule[]
  girevence_redressal girevence_redressal[]
  monthly_report      monthly_report[]
  attendance          attendance[]
  see_marks           see_marks[]
  CIE_marks           CIE_marks[]
  unit_test           unit_test[]
}

model student {
  id                  Int                   @id @default(autoincrement())
  first_name          String
  last_name           String
  full_name           String
  reg_no              String                @unique
  email               String                @unique
  address             String                @db.VarChar(250)
  gender              String
  contact_number      Int                   @unique @db.Integer
  city                String
  state               String
  password            String                @db.VarChar(20)
  
  notes               notes[]
  assingments         assignments[]
  girevence_redressal girevence_redressal[]
  unit_test           unit_test[]

  attendance                    attendance      @relation(fields: [attendanceAttendance_id], references: [attendance_id])
  attendanceAttendance_id       String          @db.Uuid
  monthly_report                monthly_report  @relation(fields: [monthly_reportMonthly_repo_id], references: [monthly_repo_id])
  monthly_reportMonthly_repo_id String          @db.Uuid
  student_remarks               student_remarks @relation(fields: [student_remarksRemarks_ID], references: [remarks_ID])
  student_remarksRemarks_ID     String          @db.Uuid
  see_marks                     see_marks       @relation(fields: [see_marksSee_id], references: [see_id])
  see_marksSee_id               String          @db.Uuid
  CIE_marks                     CIE_marks       @relation(fields: [cIE_marksCie_id], references: [cie_id])
  cIE_marksCie_id               String          @db.Uuid
  academic_year     academic_year @relation(fields: [academic_yearID], references: [ID])
  academic_yearID   String        @db.Uuid
  branch            branch        @relation(fields: [branchBranch_code], references: [branch_code])
  branchBranch_code Int
  semester          semester     @relation(fields: [semesterSem_id], references: [sem_id])
  semesterSem_id    Int
}

model staff {
  id                  Int           @id @default(autoincrement())
  staff_id            String        @unique
  first_name          String
  last_name           String
  full_name           String
  email               String        @unique
  address             String        @db.VarChar(250)
  gender              String
  contact_number      Int           @unique
  city                String
  state               String
  password            String        @db.VarChar(20)
  staff_qualification String
  notes               notes[]
  assignments         assignments[]
  attendance          attendance[]
  see_marks           see_marks[]
  CIE_marks           CIE_marks[]
  unit_test           unit_test[]

  staff_remarks           staff_remarks @relation(fields: [staff_remarksRemarks_ID], references: [remarks_ID])
  staff_remarksRemarks_ID String        @db.Uuid

  academic_year     academic_year @relation(fields: [academic_yearID], references: [ID])
  academic_yearID   String        @db.Uuid
  branch            branch        @relation(fields: [branchBranch_code], references: [branch_code])
  branchBranch_code Int
  semester          semester     @relation(fields: [semesterSem_id], references: [sem_id])
  semesterSem_id    Int
}

model subject {
  sub_code     Int     @id @default(autoincrement())
  subject_name String
  
  notes          notes[]
  monthly_report monthly_report[]
  attendance     attendance[]
  assingnments   assignments[]
  unit_test      unit_test[]
  exam_schedule  exam_schedule[]
  semester       semester       @relation(fields: [sem_num], references: [sem_id])
  sem_num Int
}

model semester {
  sem_id     Int       @id @default(autoincrement())
  sem_number Int
  student    student[]
  staffs     staff[]
  subjects   subject[]
  notes      notes[]
  unit_test         unit_test[]
  branch            branch      @relation(fields: [branchBranch_code], references: [branch_code])
  branchBranch_code Int
}

model academic_year {
  ID          String    @id @default(uuid()) @db.Uuid
  year_number Int
  student     student[]
  staff       staff[]
  branches    branch[]
}

model branch {
  branch_code     Int           @id @default(autoincrement())
  banch_name      String
  student         student[]
  staff           staff[]
  semesters       semester[]
  notes           notes[]
  assignments     assignments[]
  unit_test       unit_test[]
  academic_year   academic_year @relation(fields: [academic_yearID], references: [ID])
  academic_yearID String        @db.Uuid
}

model exam_schedule {
  exam_ID         Int            @id @default(autoincrement())
  exam_at         DateTime
  admin           admin          @relation(fields: [adminId], references: [id])
  adminId         Int
  type_of_exam    type_of_exam[]
  subject         subject        @relation(fields: [subjectSub_code], references: [sub_code])
  subjectSub_code Int
}

model type_of_exam {
  id        String @id @default(uuid()) @db.Uuid
  exam_type String
  exam_schedule exam_schedule @relation(fields: [Exam_ID], references: [exam_ID])
  Exam_ID       Int
}

model staff_remarks {
  remarks_ID          String  @id @default(uuid()) @db.Uuid
  remarks_category    String
  remarks_description String  @db.VarChar(250)
  admin               admin   @relation(fields: [adminId], references: [id])
  adminId             Int
  staff               staff[]
}

model student_remarks {
  remarks_ID          String    @id @default(uuid()) @db.Uuid
  remarks_category    String
  remarks_description String    @db.VarChar(250)
  admin               admin     @relation(fields: [adminId], references: [id])
  adminId             Int
  student             student[]
}

model girevence_redressal {
  GR_id         String   @id @default(uuid()) @db.Uuid
  Date          DateTime @default(dbgenerated("now()"))
  issue_details String   @db.VarChar(250)
  status        String
  student       student  @relation(fields: [student_name], references: [reg_no])
  student_name  String
  admin         admin    @relation(fields: [admin_name], references: [email])
  admin_name    String
}

model see_marks {
  see_id      String    @id @default(uuid()) @db.Uuid
  CIE_total   Int
  SEE_total   Int
  Grand_total Int
  student     student[]
  staff       staff     @relation(fields: [staffId], references: [id])
  staffId     Int
  admin       admin     @relation(fields: [adminId], references: [id])
  adminId     Int
}

model CIE_marks {
  cie_id        String    @id @default(uuid()) @db.Uuid
  subject_marks Int
  CIE_total     Int
  student       student[]
  staff         staff     @relation(fields: [staffId], references: [id])
  staffId       Int
  admin         admin     @relation(fields: [adminId], references: [id])
  adminId       Int
}

model attendance {
  attendance_id String    @id @default(uuid()) @db.Uuid
  status        Boolean   @default(false)
  Date          DateTime  @default(dbgenerated("now()"))
  student       student[]
  staff         staff     @relation(fields: [staffId], references: [id])
  staffId       Int
  admin         admin     @relation(fields: [adminId], references: [id])
  adminId       Int

  subject         subject @relation(fields: [subjectSub_code], references: [sub_code])
  subjectSub_code Int
}

model monthly_report {
  monthly_repo_id    String    @id @default(uuid()) @db.Uuid
  Month              DateTime
  Subject_percentage String
  student            student[]
  admin              admin     @relation(fields: [adminId], references: [id])
  adminId            Int
  subject         subject @relation(fields: [subjectSub_code], references: [sub_code])
  subjectSub_code Int
}

model notes {
  notes_id  String  @id @default(uuid()) @db.Uuid
  title     String
  content   String
  pdf       String 
  student   student @relation(fields: [studentId], references: [id])
  studentId Int

  staff   staff @relation(fields: [staffId], references: [id])
  staffId Int
  branch            branch    @relation(fields: [branchBranch_code], references: [branch_code])
  branchBranch_code Int
  subject           subject   @relation(fields: [subjectSub_code], references: [sub_code])
  subjectSub_code   Int
  semester          semester @relation(fields: [semesterSem_id], references: [sem_id])
  semesterSem_id    Int
}

model assignments {
  assignment_id     String   @id @default(uuid()) @db.Uuid
  title             String
  description       String
  deadline          DateTime
  submit_assignment String
  student           student  @relation(fields: [studentId], references: [id])
  studentId         Int
  staff             staff    @relation(fields: [staffId], references: [id])
  staffId           Int

  branch            branch  @relation(fields: [branchBranch_code], references: [branch_code])
  branchBranch_code Int
  subject           subject @relation(fields: [subjectSub_code], references: [sub_code])
  subjectSub_code   Int
}

model unit_test {
  UT_id             String    @id @default(uuid()) @db.Uuid
  UT_name           String
  Date_time         DateTime
  student           student   @relation(fields: [Stu_name], references: [reg_no])
  Stu_name          String
  staff             staff     @relation(fields: [Staff_name], references: [staff_id])
  Staff_name        String
  admin             admin     @relation(fields: [adminId], references: [id])
  adminId           Int
  branch            branch    @relation(fields: [branchBranch_code], references: [branch_code])
  branchBranch_code Int
  subject           subject   @relation(fields: [subjectSub_code], references: [sub_code])
  subjectSub_code   Int
  semester          semester @relation(fields: [semesterSem_id], references: [sem_id])
  semesterSem_id    Int
}
